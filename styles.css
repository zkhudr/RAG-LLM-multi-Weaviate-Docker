/* === GLOBAL RESETS & BASE === */
*,
*::before,
*::after {
    box-sizing: border-box;
}

html,
body {
    margin: 0;
    padding: 0;
    font-family: 'SF Pro Text', -apple-system, BlinkMacSystemFont, 'Inter', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    background-color: #0EA5E9;
    color: #111827;
    line-height: 1.5;
    font-weight: 400;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

/* === CONTAINER === */
.container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 24px;
}

/* === SCROLLBAR === */
::-webkit-scrollbar {
    width: 5px;
    height: 5px;
}

::-webkit-scrollbar-track {
    background: #8f9cb1;
}

::-webkit-scrollbar-thumb {
    background: #0EA5E9;
    border-radius: 8px;
    border: 2px solid #0EA5E9;
}

::-webkit-scrollbar-thumb:hover {
    background: #0EA5E9;
}

/* === LOADING OVERLAY === */
.loading-overlay::after {
    content: '';
    position: absolute;
    inset: 0;
    background-color: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    z-index: 10;
    display: none;
    transition: opacity 0.3s ease;
}

.loading-active.loading-overlay::after {
    display: block;
}

/* === SPINNER === */
.spinner {
    animation: spin 2s cubic-bezier(0.55, 0.055, 0.675, 0.19) infinite;
}

/* Spin animation for the entire atom */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* Orbit animations for different electron paths */
.orbit-1,
.orbit-2,
.orbit-3 {
    position: absolute;
    border-radius: 50%;
    stroke: #0EA5E9;
    fill: none;
}

.orbit-1 {
    animation: orbit 4s linear infinite;
}

.orbit-2 {
    animation: orbit 6s linear infinite reverse;
}

.orbit-3 {
    animation: orbit 8s linear infinite;
}

/* Electron path animation */
.electron-1,
.electron-2,
.electron-3 {
    position: absolute;
    fill: #1D4ED8;
    /* Default dark blue for electrons */
    animation: electron 4s linear infinite;
}

.electron-2 {
    fill: #0EA5E9;
}

/* Light blue electron */

/* Animation to move electrons along their orbits */
@keyframes orbit {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes electron {
    0% {
        transform: rotate(0deg) translateX(20px);
    }

    100% {
        transform: rotate(360deg) translateX(20px);
    }
}

/* Modify specific electron animations for each orbit */
.electron-1 {
    animation-duration: 4s;
}

.electron-2 {
    animation-duration: 6s;
    transform: rotate(0deg) translateY(-30px);
}

.electron-3 {
    animation-duration: 8s;
    transform: rotate(0deg) translateX(-20px);
}

/* === BUTTONS === */
.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 8px 16px;
    border-radius: 8px;
    font-weight: 500;
    font-size: 14px;
    transition: all 0.2s ease;
    cursor: pointer;
    background-color: #F9FAFB;
    color: #111827;
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.button:hover {
    background-color: #F3F4F6;
}

.button:active {
    transform: translateY(1px);
}

.button-primary,
.upload-button,
.create-button {
    background-color: #0EA5E9;
    color: white;
    border: none;
}

.button-primary:hover,
.upload-button:hover,
.create-button:hover {
    background-color: #0284C7;
}

.button-primary:active,
.upload-button:active,
.create-button:active {
    transform: translateY(1px);
}

/* === CARDS === */
card {
    background-color: #ffffff;
    border-radius: 8px;
    /* slightly smaller corners */
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    /* lighter, tighter shadow */
    padding: 16px;
    /* reduce from 24px → 16px */
    border: 1px solid rgba(0, 0, 0, 0.1);
    margin-top: 8px;
    /* reduce from 16px → 8px */
    transition: box-shadow 0.3s ease;  }

.card:hover {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* === FORM ELEMENTS === */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
textarea,
select {
    width: 100%;
    padding: 10px 12px;
    border-radius: 8px;
    border: 1px solid #D1D5DB;
    background-color: #FFFFFF;
    font-size: 14px;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
textarea:focus,
select:focus {
    outline: none;
    border-color: #0EA5E9;
    box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.15);
}

/* === TYPOGRAPHY === */
h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: 600;
    line-height: 1.2;
    margin-top: 0;
    margin-bottom: 0.5em;
    color: #0EA5E9;
}

h1 {
    font-size: 2.25rem;
    letter-spacing: -0.025em;
}

h2 {
    font-size: 1.875rem;
    letter-spacing: -0.025em;
}

h3 {
    font-size: 1.5rem;
}

h4 {
    font-size: 1.25rem;
}

p {
    margin-top: 0;
    margin-bottom: 1em;
}

a {
    color: #0EA5E9;
    text-decoration: none;
    transition: color 0.2s ease;
}

a:hover {
    color: #0284C7;
}

/* === RANGE SLIDER === */
input[type=range].custom-slider {
    height: 6px;
    -webkit-appearance: none;
    background: transparent;
    width: 100%;
    padding: 0;
    margin: 0;
}

/* Webkit */
input[type=range].custom-slider::-webkit-slider-runnable-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #CACACA;
    /* Light gray */
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
}

input[type=range].custom-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 16px;
    /* Smaller height for the thumb */
    width: 16px;
    /* Smaller width for the thumb */
    background: #0EA5E9;
    /* Blue color */
    border-radius: 50%;
    /* Make it circular */
    cursor: pointer;
    margin-top: -4px;
    /* Adjusted margin to keep it centered */
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    /* Subtle shadow for depth */
    border: 1px solid #ABABAB;
    /* Thin border for consistency */
}

input[type=range].custom-slider:focus::-webkit-slider-thumb {
    box-shadow: 0 0 0 4px rgba(170, 170, 170, 0.3);
    /* Focus effect */
}

/* Firefox */
input[type=range].custom-slider::-moz-range-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #CACACA;
    /* Light gray */
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
}

input[type=range].custom-slider::-moz-range-thumb {
    height: 11px;
    /* Half the original size */
    width: 11px;
    /* Half the original size */
    background: #0EA5E9;
    /* Blue color */
    border-radius: 70%;
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border: 1px solid #ABABAB;
    transition: background 0.2s ease, transform 0.1s ease;
}

input[type=range].custom-slider:focus::-moz-range-thumb {
    box-shadow: 0 0 0 4px rgba(170, 170, 170, 0.3);
    /* Focus effect */
}

/* Toggle Checkbox Style */
input[type="checkbox"].toggle-checkbox {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 34px;
    height: 20px;
    background-color: #B6B6B6;
    /* Light gray background when off */
    border-radius: 50px;
    position: relative;
    cursor: pointer;
    transition: background-color 0.3s ease;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
    /* Ensure the border is visible when off */
}

/* When the checkbox is checked */
input[type="checkbox"].toggle-checkbox:checked {
    background-color: #0EA5E9;
    /* Blue color when on */
}

/* The thumb (circular button inside the toggle) */
input[type="checkbox"].toggle-checkbox::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 16px;
    height: 16px;
    background-color: white;
    border-radius: 50%;
    transition: transform 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border: 1px solid #ABABAB;
    /* Border for the thumb */
}

/* When checked, move the thumb to the right */
input[type="checkbox"].toggle-checkbox:checked::before {
    transform: translateX(14px);
    /* Moves the thumb to the right when on */
}

/* === Auto Domain Keywords Chips === */
.chip {
    background-color: #0EA5E9;
    /* Using your blue theme */
    color: white;
    padding: 5px 12px;
    border-radius: 16px;
    font-size: 12px;
    cursor: pointer;
    margin: 2px;
    transition: background-color 0.3s ease;
}

.chip:hover {
    background-color: #0284C7;
    /* Darker shade on hover */
    transform: scale(1.1);
}

/* === Custom Slider (Top N Keywords) === */
input[type=range].custom-slider {
    height: 6px;
    background: #e0e0e0;
    border-radius: 4px;
}

input[type=range].custom-slider::-webkit-slider-runnable-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #CACACA;
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
}

input[type=range].custom-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 16px;
    width: 16px;
    background: #0EA5E9;
    border-radius: 50%;
    cursor: pointer;
    margin-top: -4px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border: 1px solid #ABABAB;
}

input[type=range].custom-slider:focus::-webkit-slider-thumb {
    background: #0284C7;
    /* Darker color on focus */
}

/* For Firefox compatibility */
input[type=range].custom-slider::-moz-range-track {
    width: 100%;
    height: 6px;
    cursor: pointer;
    background: #CACACA;
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
}

input[type=range].custom-slider::-moz-range-thumb {
    height: 11px;
    width: 11px;
    background: #0EA5E9;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border: 1px solid #ABABAB;
}

input[type=range].custom-slider:focus::-moz-range-thumb {
    background: #0284C7;
    /* Darker color on focus */
}

/* === Toggle Checkbox === */
input[type="checkbox"].toggle-checkbox {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 34px;
    height: 20px;
    background-color: #B6B6B6;
    border-radius: 50px;
    position: relative;
    cursor: pointer;
    transition: background-color 0.3s ease;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    border: 1px solid #B6B6B6;
}

input[type="checkbox"].toggle-checkbox:checked {
    background-color: #0EA5E9;
}

input[type="checkbox"].toggle-checkbox::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 16px;
    height: 16px;
    background-color: white;
    border-radius: 50%;
    transition: transform 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border: 1px solid #ABABAB;
}

input[type="checkbox"].toggle-checkbox:checked::before {
    transform: translateX(14px);
    /* Move the thumb to the right when checked */
}



#centroid-panel,
#centroid-stats {
    flex: 1;
    /* each panel takes equal width */
    min-width: 400px;
    /* don’t shrink too small */
}
.centroid-container {
    display: flex;
    gap: 0rem;
    align-items: flex-start;
    margin-top: 0rem;
    padding: 0rem;
    /* <-- add horizontal padding */
}

/* Optional: if you only want padding on the stats side */
#centroid-stats {
    padding-right: 1rem;
}


.chart-container {
    border: 0rem solid #b6b5b5;
    padding: 0.1rem;
    background: #b6b5b5;
}

#stats-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed;
    /* enforce fixed column widths */
}

#stats-table th,
#stats-table td {
    border: 1px solid #b6b5b5;
    padding: 0.5rem;
}

/* Header styling */
#stats-table th {
    background: #b6b5b5;
    text-align: left;
}

/* Metric column (first) */
#stats-table th:nth-child(1),
#stats-table td:nth-child(1) {
    width: 10%;
    white-space: normal;
    /* allow wrapping */
    overflow-wrap: anywhere;
}

/* Value column (second) */
#stats-table th:nth-child(2),
#stats-table td:nth-child(2) {
    width: 10%;
    white-space: normal;
    /* allow wrapping */
    text-align: right;
}

/* Force all fieldsets to that grey fill */
fieldset {
    background-color: #b6b5b5 !important;
    border: 1px solid #e79428;
    /* optional border you control */
    padding: 1rem;
    /* breathing room */
}

/* If you only want certain fieldsets, add a class:
     <fieldset class="grey-bg">…</fieldset>
  */
.grey-bg {
    background-color: #ffca7b !important;
}


/* Tidy up the legend so it doesn’t inherit the grey:
     legend sits on top of the fieldset background */

fieldset>legend {
    background: #e0dfdf !important;
    padding: 0 0.5rem;
    font-weight: bold; }

        .prose img {
            max-width: 100%;
        }
    
        .prose table {
            width: 100%;
            border-collapse: collapse;
        }
    
        .prose th,
        .prose td {
            border: 1px solid #ddd;
            padding: 0.5rem;
        }
        
        /* Let fieldsets be direct children of <main> for grid layout */
        main>form {display: contents;}
       /* Map  sections to the grid-template-areas names */
        .area-presets {grid-area: presets; }
        .area-retrieval {grid-area: retrieval; }
        .area-model { grid-area: model;    }
        .area-chat     { grid-area: chat; }
        .area-files    { grid-area: files; }
        .area-docs     { grid-area: docs; }
        .area-keywords { grid-area: keywords; }
        .area-stats    { grid-area: stats; }
        .area-weaviate { grid-area: weaviate; }
        .area-dist     { grid-area: dist; }
        .area-footer   { grid-area: footer; }
      

        /* Added new grid areas */
        .area-dist1 {
            grid-area: dist1;
        }
    
        .area-dist2 {
            grid-area: dist2;
        }
    
        /* Fixed grid row heights */
        main {
            grid-auto-rows: minmax(100px, auto);
        }
    
        /* Unified fieldset styling */
        fieldset {
            background-color: #f0f0f0;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
        }
    
        /* Fixed legend positioning */
        legend {
            background: white;
            padding: 0 10px;
            font-weight: bold;
        }
    
        /* Improved card layout */
        .card {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
    
        /* Fixed footer positioning */
        footer {
            margin-top: auto;
        }
    
        /* Responsive adjustments */
        @media (max-width: 1024px) {
            main {
                grid-template-columns: 1fr;
                grid-template-areas:
                    'files'
                    'keywords'
                    'stats'
                    'presets'
                    'chat'
                    'retrieval'
                    'model'
                    'env'
                    'docs'
                    'weaviate'
                    'dist1'
                    'dist2'
                    'footer';
            }
        }